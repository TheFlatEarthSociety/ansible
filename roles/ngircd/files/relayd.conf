table <palpatine> { 173.230.144.109 }
table <palpatinetls> { 127.0.0.1 }
table <wsproxy> { 127.0.0.1 }

http protocol tlsclient {
	tls ca file "/etc/ssl/cert.pem"
}

http protocol tlsclientxff {
	tls ca file "/etc/ssl/cert.pem"
	match header set "X-Forwarded-For" value "$REMOTE_ADDR"
}

http protocol irc {
	match header set "X-Forwarded-For" value "$REMOTE_ADDR"
	pass forward to <palpatinetls>
	pass request path "/ws/*" forward to <wsproxy>
	# https://assets.tfes.org/openbsd/6.4/bin/relayd-64tfes1.patch
	match response header "Upgrade" value "websocket" protocol tcp
}

# This is a hack. relayd doesn't seem to allow having TLS and non-TLS forward
# rules in the same relay, so instead we forward over non-TLS to ourselves and
# then act as a TLS client in a separate relay. We don't forward much traffic
# to palpatine anyway, so this isn't a big problem.
relay palpatinetls {
	listen on 127.0.0.1 port 6670
	protocol tlsclient
	forward with tls to <palpatine> port 443
}

relay irc {
	listen on 0.0.0.0 port 80
	listen on :: port 80
	protocol tlsclientxff
	forward with tls to <palpatine> port 443
}

relay irctls {
	listen on 0.0.0.0 port 443 tls
	listen on :: port 443 tls
	protocol irc
	forward to <palpatinetls> port 6670
	forward to <wsproxy> port 6669
}
