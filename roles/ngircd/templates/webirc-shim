#!/usr/bin/perl -T

use 5.014; # inet6
use utf8;
use strict;
use warnings;

use IO::Select ();
use IO::Socket::IP qw(SOCK_STREAM);
use OpenBSD::Pledge qw(pledge);
use Socket qw(AF_INET AF_INET6 getaddrinfo inet_ntop inet_pton
	unpack_sockaddr_in unpack_sockaddr_in6);

sub xread;
sub xwrite;

pledge "stdio dns inet" or die "pledge: $!";

my $addr = $ENV{REMOTE_ADDR};
if($addr eq "127.0.0.1" and my $xff = $ENV{HTTP_X_FORWARDED_FOR}) {
	$addr = $xff;
}
die "webirc-shim: invalid ip address: $addr"
	unless $addr =~ /^[0-9a-f.:]{3,39}$/i;

my $fam = $addr =~ /:/ ? AF_INET6 : AF_INET;
(my $host) = gethostbyaddr(inet_pton($fam, $addr), $fam);

# rfc 2812 2.3.1
$host = $addr unless
	(defined $host and $host =~ /^[0-9a-z][0-9a-z.-]{0,62}$/i);

# check that forward DNS matches reverse DNS
if($host ne $addr) {
	my ($err, @addrs) = getaddrinfo($host, "", {family => $fam});
	if($err) {
		warn "getaddrinfo $host: $err";
		$host = $addr;
	} else {
		$host = $addr unless grep {
			my ($p, $a) = $fam == AF_INET
				? unpack_sockaddr_in($_->{addr})
				: unpack_sockaddr_in6($_->{addr});
			inet_ntop($fam, $a) eq $addr;
		} @addrs;
	}
}

my $sock = IO::Socket::IP->new(
	PeerHost => "localhost",
	PeerPort => 6668,
	Type     => SOCK_STREAM,
) or die "webirc-shim: $@";

pledge "stdio" or die "pledge: $!";

# We don't read error responses to this command, so they will be sent to the
# client. This might be considered a bug, but it doesn't leak any sensitive
# information (at least with ngircd), so for now we'll ignore it.
xwrite $sock, "WEBIRC {{ webirc_password }} webirc-shim $host $addr\r\n";

my $s = IO::Select->new();
$s->add(\*STDIN);
$s->add($sock);

my (@r, $buf);
while(@r = $s->can_read()) {
	for (@r) {
		if($_==\*STDIN) {
			xread \*STDIN, \$buf;
			xwrite $sock, $buf;
		}
		if($_==$sock) {
			xread $sock, \$buf;
			xwrite \*STDOUT, $buf;
		}
	}
}

sub xread {
	my $n = sysread shift, ${(shift)}, 1024;
	die "webirc-shim: $!" unless defined $n;
	die "webirc-shim: eof" unless $n;
}

sub xwrite {
	my $n = syswrite shift, shift;
	die "webirc-shim: $!" unless defined $n;
}
